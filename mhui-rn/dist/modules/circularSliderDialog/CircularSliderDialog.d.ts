import { Component } from 'react';
import PropTypes from "prop-types";
export default class CircularSliderDialog extends Component {
    static propTypes: {
        title: PropTypes.Requireable<string>;
        icon: PropTypes.Requireable<any>;
        iconDisabled: PropTypes.Requireable<any>;
        themeColor: PropTypes.Requireable<string>;
        rightArrow: PropTypes.Requireable<boolean>;
        invisible: PropTypes.Requireable<boolean>;
        useMoveValueList: PropTypes.Requireable<boolean>;
        valueList: PropTypes.Requireable<any[]>;
        synSliding: PropTypes.Requireable<boolean>;
        step: PropTypes.Requireable<number>;
        radius: PropTypes.Requireable<number>;
        strokeWidth: PropTypes.Requireable<number>;
        backgroundPaddingTrackColor: PropTypes.Requireable<string>;
        backgroundRangeTrackColor: PropTypes.Requireable<string>;
        linearGradient: PropTypes.Requireable<any[]>;
        buttonRadius: PropTypes.Requireable<number>;
        buttonFillColor: PropTypes.Requireable<string>;
        buttonBorderColor: PropTypes.Requireable<string>;
        buttonStrokeWidth: PropTypes.Requireable<number>;
        initLeftValue: PropTypes.Requireable<number>;
        initRightValue: PropTypes.Requireable<number>;
        minLeftValue: PropTypes.Requireable<number>;
        minRightValue: PropTypes.Requireable<number>;
        maxLeftValue: PropTypes.Requireable<number>;
        maxRightValue: PropTypes.Requireable<number>;
        horizontalDirection: PropTypes.Requireable<boolean>;
        verticalDirection: PropTypes.Requireable<boolean>;
        dialNumStyle: PropTypes.Requireable<object>;
        disabled: PropTypes.Requireable<boolean>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        onComplete: PropTypes.Requireable<(...args: any[]) => any>;
        accessible: PropTypes.Requireable<boolean>;
        accessibilityLabel: PropTypes.Requireable<string | number>;
        subtitleAccessibilityLabel: PropTypes.Requireable<string | number>;
        accessibilityHint: PropTypes.Requireable<string | number>;
        sliderAccessibilityLabel: any;
        sliderAccessibilityHint: any;
    };
    static defaultProps: {
        useMoveValueList: boolean;
        valueList: number[];
        synSliding: boolean;
        step: number;
        radius: number;
        strokeWidth: number;
        backgroundPaddingTrackColor: string;
        backgroundRangeTrackColor: string;
        linearGradient: {
            stop: string;
            color: string;
        }[];
        buttonRadius: number;
        buttonFillColor: string;
        buttonBorderColor: string;
        buttonStrokeWidth: number;
        initLeftValue: number;
        initRightValue: number;
        minLeftValue: number;
        minRightValue: number;
        maxLeftValue: number;
        maxRightValue: number;
        horizontalDirection: boolean;
        verticalDirection: boolean;
        dialNumStyle: {
            fill: string;
            textAnchor: string;
        };
        disabled: boolean;
        accessible: boolean;
        onChange: () => void;
        onComplete: () => void;
    };
    constructor(props: any, context: any);
    _onPress: () => void;
    _onClickDismiss: () => void;
    _onClickOk: () => void;
    onValueChange: (data: any) => void;
    render(): JSX.Element;
}
